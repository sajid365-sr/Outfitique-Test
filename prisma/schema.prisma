generator client {
    provider        = "prisma-client-js"
    previewFeatures = []
}

datasource db {
    provider     = "mongodb"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id             String    @id @default(cuid()) @map("_id")
    name           String?
    email          String    @unique
    hashedPassword String?
    emailVerified  DateTime?
    image          String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    Account        Account[]
    Session        Session[]
}

model Account {
    id                String  @id @default(cuid()) @map("_id")
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(cuid()) @map("_id")
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Add other models as needed

model WaitlistSubscriber {
    id        String   @id @default(cuid()) @map("_id")
    email     String   @unique
    createdAt DateTime @default(now())
    status    String   @default("pending") // pending, contacted, registered
}

model Item {
    id       String   @id @default(cuid()) @map("_id")
    name     String
    category String
    imgUrl   String // URL of the image from Cloudinary
    tags     String[] // Array of tags
}
